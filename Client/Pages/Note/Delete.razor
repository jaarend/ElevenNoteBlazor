@page "/note/delete/{NoteId:int}"
@using ElevenNoteWebApp_2.Shared.Models.Note
@using Microsoft.AspNetCore.Authorization;
@inject HttpClient Http
@inject NavigationManager navigation
@attribute [Authorize]






<h3>Delete Note #@NoteId</h3>

@if(Message != null)
{
	<h2 class="text-danger">@Message</h2>
}

@if(Note != null)
{
	<div class="container">
		<div class="card">
			<div class="card-header d-flex justify-content-between">
				<span>Note #@Note.Id</span>
				<span class="text-muted"><strong>@Note.CategoryName</strong></span>
			</div>
			<div class="card-body">
				<h4 class="card-title">@Note.Title</h4>
				<p class="card-text">@Note.Content</p>
			</div>
			<div class="card-footer text-muted d-flex justify-content-between">
				<span class="text-left">Created: @Note.CreatedUtc</span>
				@if (Note.ModifiedUtc != null)
				{
					<span class="text-right">Modified: @Note.ModifiedUtc</span>
				}
			</div>
		</div>
		<div class="d-flex justify-content-center mt-3">
			<div class="text-center justify-content-between w-50">
				<a href=@($"/note/edit/{NoteId}") class="btn btn-outline-primary">Back to Note</a>
				<a href="#" @onclick="HandleClick" class="btn btn-danger text-white">Delete Note!</a>
			</div>
		</div>
	</div>
}
else
{
	<p>Loading....</p>
}


@code {
	[Parameter]
	public int NoteId { get; set; }
	public NoteDetail Note { get; set; }
	public string Message { get; set; }

	protected override async Task OnInitializedAsync()
	{
		Note = await Http.GetFromJsonAsync<NoteDetail>($"/api/note/{NoteId}");
	}

	private async void HandleClick()
	{
		//call a delete request on our API
		var deleteRes = await Http.DeleteAsync($"/api/note/{NoteId}");
		//check to make sure the call was a success
		if(deleteRes.IsSuccessStatusCode)
		{
			navigation.NavigateTo("/note");
		}
		//if successful, navigate back to the index
		else
		{
			Message = "Failed to delete your note.";
		}
		//if not successful, give the user an error message
	}
}
